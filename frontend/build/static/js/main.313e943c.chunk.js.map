{"version":3,"sources":["constants/questionairConstants.js","constants/userProfileConstants.js","constants/userLoginConstants.js","constants/appointmentConstants.js","store.js","reducers/questionairReducer.js","reducers/userProfileReducer.js","reducers/userLoginReducers.js","reducers/appointmentReducers.js","actions/userLoginActions.js","components/partials/Header.jsx","components/Message.jsx","components/Loader.jsx","components/FormContainer.jsx","components/Signup.jsx","components/Register.jsx","actions/appointmentActions.js","components/Records.jsx","components/Questionnair.jsx","actions/questionairActions.js","components/Scores.jsx","actions/userProfileAction.js","components/Profile.jsx","components/Scheduler.jsx","components/AdminScheduler.jsx","components/WeeklyRecords.jsx","components/Appointment.jsx","components/LineChart.jsx","components/SelfMonitoring.jsx","components/MeditationGuide.jsx","components/MusicTherapy.jsx","components/Therapy.jsx","components/Dummy.jsx","components/Faq.js","components/partials/Footer.jsx","components/HomeScreen.js","components/AdminDashboard.jsx","components/Analysis.jsx","components/App.jsx","index.js"],"names":["QUESTIONAIR_REQUEST","QUESTIONAIR_SUCCESS","QUESTIONAIR_FAIL","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAIL","USER_PROFILE_UPDATE_RESET","USER_APPOINTMENT_HISTORY_REQUEST","USER_APPOINTMENT_HISTORY_SUCCESS","USER_APPOINTMENT_HISTORY_FAIL","USER_PERIODIC_APPOINTMENT_HISTORY_REQUEST","USER_PERIODIC_APPOINTMENT_HISTORY_SUCCESS","USER_PERIODIC_APPOINTMENT_HISTORY_FAIL","USER_BOOK_APPOINTMENT_REQUEST","USER_BOOK_APPOINTMENT_SUCCESS","USER_BOOK_APPOINTMENT_FAIL","USER_UPDATE_APPOINTMENT_REQUEST","USER_UPDATE_APPOINTMENT_SUCCESS","USER_UPDATE_APPOINTMENT_FAIL","reducer","combineReducers","questionairList","state","questionair","action","type","loading","payload","error","profile","user","userLogin","userInfo","userRegister","appointmentHistory","userAppointments","updateUserProfile","success","periodicHistory","periodicAppointments","bookAppointment","Loading","bookAppointments","Error","updateAppointment","updatedAppointment","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","Header","useDispatch","useSelector","Navbar","collapseOnSelect","expand","bg","Container","className","fluid","Brand","href","style","fontSize","fontFamily","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","isAdmin","name","to","_id","Item","onClick","Link","smooth","duration","backgroundColor","borderRadius","Message","variant","children","Alert","defaultProps","Loader","Spinner","animation","role","margin","display","FormContainer","Row","Col","xs","md","Signup","location","history","useState","email","setEmail","password","setPassword","useEffect","push","Form","onSubmit","e","preventDefault","a","config","headers","axios","post","data","setItem","stringify","response","message","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","block","color","Register","setName","contact","setContact","confirmPassword","setConfirmPassword","setMessage","length","console","log","register","periodicAppointmentHistory","get","date","slot","DATE","SLOT","ID","Records","details","setDetails","AppointmentHistory","Table","striped","bordered","hover","map","object","accept","doctor","accessmentScore","prescription","d","Date","dd","getTime","formatedDate","getDate","getMonth","getFullYear","formatedSlot","assignValue","Score","Number","Questionnair","radio","setRadio","total","counter","item","submitHandler","appointment","score","getState","put","question","options","Card","Body","singleOption","checked","points","option","Scores","dataBar","labels","datasets","label","borderWidth","borderColor","animations","tension","easing","from","loop","barChartOptions","responsive","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","yAxes","ticks","suggestedMax","min","max","stepSize","beginAtZero","this","React","Component","userProfile","Profile","match","gender","setGender","age","setAge","userProfileData","lg","Image","src","width","height","thumbnail","readOnly","Scheduler","slotno","setSlot","periodic","bookedAppointments","week","months","c","ddd","m","y","dateValidateObject","dateObject","toutc","toISOString","boolArray","date1","date2","formatedDate2","disabled","AdminScheduler","OBJECT","WeeklyRecords","Appointment","Tabs","defaultActiveKey","Tab","eventKey","lineOptions","userCallback","toString","split","join","legend","tooltips","enabled","styles","textAlign","LineChart","props","SelfMonitoring","LABELS","SCORES","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","undefined","actualdate","MeditationGuide","MusicTherapy","Therapy","Dummy","sm","Content","Pane","path","component","Faq","Accordion","cursor","as","class","Footer","currentYear","HomeScreen","Carousel","interval","alt","Caption","AdminDashboard","Analysis","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.313e943c.chunk.js","sourcesContent":["export const QUESTIONAIR_REQUEST = 'QUESTIONAIR_REQUEST'\r\nexport const QUESTIONAIR_SUCCESS = 'QUESTIONAIR_SUCCESS'\r\nexport const QUESTIONAIR_FAIL = 'QUESTIONAIR_FAIL'","export const USER_PROFILE_REQUEST = 'USER_PROFILE_REQUEST'\r\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS'\r\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL'\r\n\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\nexport const USER_PROFILE_REQUEST = 'USER_PROFILE_REQUEST'\r\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS'\r\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL'\r\n\r\nexport const USER_PROFILE_UPDATE_REQUEST = 'USER_PROFILE_UPDATE_REQUEST'\r\nexport const USER_PROFILE_UPDATE_SUCCESS = 'USER_PROFILE_UPDATE_SUCCESS'\r\nexport const USER_PROFILE_UPDATE_FAIL = 'USER_PROFILE_UPDATE_FAIL'\r\nexport const USER_PROFILE_UPDATE_RESET = 'USER_PROFILE_UPDATE_RESET'\r\n","export const USER_APPOINTMENT_HISTORY_REQUEST = \"USER_APPOINTMENT_HISTORY_REQUEST\"\r\nexport const USER_APPOINTMENT_HISTORY_SUCCESS = \"USER_APPOINTMENT_HISTORY_SUCCESS\"\r\nexport const USER_APPOINTMENT_HISTORY_FAIL = \"USER_APPOINTMENT_HISTORY_FAIL\"\r\n\r\n\r\nexport const USER_PERIODIC_APPOINTMENT_HISTORY_REQUEST = \"USER_PERIODIC_APPOINTMENT_HISTORY_REQUEST\"\r\nexport const USER_PERIODIC_APPOINTMENT_HISTORY_SUCCESS = \"USER_PERIODIC_APPOINTMENT_HISTORY_SUCCESS\"\r\nexport const USER_PERIODIC_APPOINTMENT_HISTORY_FAIL = \"USER_PERIODIC_APPOINTMENT_HISTORY_FAIL\"\r\n\r\n\r\nexport const USER_BOOK_APPOINTMENT_REQUEST = \"USER_BOOK_APPOINTMENT_REQUEST\"\r\nexport const USER_BOOK_APPOINTMENT_SUCCESS = \"USER_BOOK_APPOINTMENT_SUCCESS\"\r\nexport const USER_BOOK_APPOINTMENT_FAIL = \"USER_BOOK_APPOINTMENT_FAIL\"\r\n\r\nexport const USER_UPDATE_APPOINTMENT_REQUEST = \"USER_UPDATE_APPOINTMENT_REQUEST\"\r\nexport const USER_UPDATE_APPOINTMENT_SUCCESS = \"USER_UPDATE_APPOINTMENT_SUCCESS\"\r\nexport const USER_UPDATE_APPOINTMENT_FAIL = \"USER_UPDATE_APPOINTMENT_FAIL\"","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { questionairReducer } from \"./reducers/questionairReducer.js\"\r\nimport { userProfileReducer } from \"./reducers/userProfileReducer.js\"\r\nimport { userLoginReducer, userRegisterReducer, updateUserProfileReducer } from \"./reducers/userLoginReducers.js\"\r\nimport { appointmentHistoryReducer, periodicAppointmentHistoryReducer, bookAppointmentReducer, updateAppointmentReducer } from \"./reducers/appointmentReducers.js\"\r\n\r\nconst reducer = combineReducers({\r\n    questionairList: questionairReducer,\r\n    profile: userProfileReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    appointmentHistory: appointmentHistoryReducer,\r\n    updateUserProfile: updateUserProfileReducer,\r\n    periodicHistory: periodicAppointmentHistoryReducer,\r\n    bookAppointment: bookAppointmentReducer,\r\n    updateAppointment: updateAppointmentReducer\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    : null\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import { QUESTIONAIR_REQUEST, QUESTIONAIR_SUCCESS, QUESTIONAIR_FAIL } from \"../constants/questionairConstants.js\"\r\n\r\nexport const questionairReducer = (state = { questionair: [] }, action) => {\r\n    switch (action.type) {\r\n        case QUESTIONAIR_REQUEST:\r\n            return { loading: true, questionair: [] }\r\n        case QUESTIONAIR_SUCCESS:\r\n            return { loading: false, questionair: action.payload }\r\n        case QUESTIONAIR_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport {\r\n    USER_PROFILE_REQUEST,\r\n    USER_PROFILE_SUCCESS,\r\n    USER_PROFILE_FAIL\r\n}\r\n    from \"../constants/userProfileConstants.js\"\r\n\r\nexport const userProfileReducer = (state = { user: {} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_PROFILE_REQUEST:\r\n            return { loading: true, ...state }\r\n        case USER_PROFILE_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n","import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_PROFILE_UPDATE_FAIL,\r\n    USER_PROFILE_UPDATE_REQUEST,\r\n    USER_PROFILE_UPDATE_RESET,\r\n    USER_PROFILE_UPDATE_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS\r\n} from \"../constants/userLoginConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const updateUserProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_PROFILE_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_PROFILE_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_PROFILE_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_PROFILE_UPDATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_APPOINTMENT_HISTORY_REQUEST,\r\n    USER_APPOINTMENT_HISTORY_SUCCESS,\r\n    USER_APPOINTMENT_HISTORY_FAIL,\r\n    USER_PERIODIC_APPOINTMENT_HISTORY_REQUEST,\r\n    USER_PERIODIC_APPOINTMENT_HISTORY_SUCCESS,\r\n    USER_PERIODIC_APPOINTMENT_HISTORY_FAIL,\r\n    USER_BOOK_APPOINTMENT_REQUEST,\r\n    USER_BOOK_APPOINTMENT_SUCCESS,\r\n    USER_BOOK_APPOINTMENT_FAIL,\r\n    USER_UPDATE_APPOINTMENT_REQUEST,\r\n    USER_UPDATE_APPOINTMENT_SUCCESS,\r\n    USER_UPDATE_APPOINTMENT_FAIL\r\n\r\n} from \"../constants/appointmentConstants.js\"\r\n\r\nexport const appointmentHistoryReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_APPOINTMENT_HISTORY_REQUEST:\r\n            return { loading: true, userAppointments: [] }\r\n        case USER_APPOINTMENT_HISTORY_SUCCESS:\r\n            return { loading: false, userAppointments: action.payload }\r\n        case USER_APPOINTMENT_HISTORY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const periodicAppointmentHistoryReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_PERIODIC_APPOINTMENT_HISTORY_REQUEST:\r\n            return { loading: true, periodicAppointments: [] }\r\n        case USER_PERIODIC_APPOINTMENT_HISTORY_SUCCESS:\r\n            return { loading: false, periodicAppointments: action.payload }\r\n        case USER_PERIODIC_APPOINTMENT_HISTORY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const bookAppointmentReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_BOOK_APPOINTMENT_REQUEST:\r\n            return { Loading: true, bookAppointments: {} }\r\n        case USER_BOOK_APPOINTMENT_SUCCESS:\r\n            return { Loading: false, bookAppointments: action.payload }\r\n        case USER_BOOK_APPOINTMENT_FAIL:\r\n            return { Loading: false, Error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateAppointmentReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_APPOINTMENT_REQUEST:\r\n            return { loading: true, updatedAppointment: {} }\r\n        case USER_UPDATE_APPOINTMENT_SUCCESS:\r\n            return { loading: false, updatedAppointment: action.payload }\r\n        case USER_UPDATE_APPOINTMENT_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import axios from \"axios\"\r\nimport {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_PROFILE_UPDATE_FAIL,\r\n    USER_PROFILE_UPDATE_REQUEST,\r\n    USER_PROFILE_UPDATE_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS\r\n} from \"../constants/userLoginConstants\"\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/users/login\",\r\n            { email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n\r\n}\r\n\r\nexport const register = (name, email, contact, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/users/register\",\r\n            { name, email, contact, password },\r\n            config\r\n        )\r\n        console.log(data + \"***\")\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../actions/userLoginActions.js';\r\nimport { Link } from 'react-scroll';\r\n\r\nfunction Header() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { userInfo } = userLogin;\r\n\r\n\tconst logoutHandler = () => {\r\n\t\tdispatch(logout());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"white\">\r\n\t\t\t\t<Container className=\"nav-bar\" fluid>\r\n\t\t\t\t\t{/*.nav-bar in bootstrap.min.css */}\r\n\t\t\t\t\t<Navbar.Brand href=\"/\">\r\n\t\t\t\t\t\t<h2\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontSize: '2.5rem',\r\n\t\t\t\t\t\t\t\tfontFamily: 'Satisfy, cursive',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSahaya\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t</Navbar.Brand>{' '}\r\n\t\t\t\t\t{/* Main Page Navbar */}\r\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t\t<Nav className=\"mr-auto\"></Nav>\r\n\t\t\t\t\t\t<Nav className=\"navitems\">\r\n\t\t\t\t\t\t\t{userInfo ? (\r\n\t\t\t\t\t\t\t\t<NavDropdown\r\n\t\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\tuserInfo.isAdmin\r\n\t\t\t\t\t\t\t\t\t\t\t? userInfo.name + ' (Admin)'\r\n\t\t\t\t\t\t\t\t\t\t\t: userInfo.name\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to={`/profile/${userInfo._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Profile</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t{userInfo.isAdmin ? (\r\n\t\t\t\t\t\t\t\t\t\t<LinkContainer\r\n\t\t\t\t\t\t\t\t\t\t\tto={`/admindashboard/profile/${userInfo._id}`}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Dashboard</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/dashboard/profile/${userInfo._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Dashboard</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to=\"/login\">\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={logoutHandler}>\r\n\t\t\t\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to=\"/login\">\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link className=\"navitems\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user\"></i> Sign In\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t<Nav className=\"navitems\">\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to=\"faq\" smooth={true} duration={1000}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tF A Q\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav>\r\n\r\n\t\t\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"navitems\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#266150',\r\n\t\t\t\t\t\t\t\t\t\t\tborderRadius: '0.3rem',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to=\"aboutus\" smooth={true} duration={1000}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tAbout Us\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{/* <LinkContainer to=\"/login\">\r\n                                <Nav.Link>\r\n                                    <i className=\"fas fa-user mr-2\"></i> Sign in\r\n                            </Nav.Link>\r\n                            </LinkContainer> */}\r\n\t\t\t\t\t\t\t{/* <Button variant=\"light\">Sign up</Button> */}\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Container>\r\n\t\t\t</Navbar>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Alert } from \"react-bootstrap\"\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert\r\n            variant={variant}\r\n        >\r\n            {children}\r\n        </Alert>\r\n    )\r\n\r\n}\r\nMessage.defaultProps = {\r\n    variant: \"info\"\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from \"react-bootstrap\"\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            variant=\"primary\"\r\n            role=\"status\"\r\n            style={{\r\n                margin: \"auto\",\r\n                display: \"block\"\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container >\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from './Message';\r\nimport Loader from './Loader';\r\nimport FormContainer from './FormContainer';\r\nimport { login } from '../actions/userLoginActions';\r\n\r\nconst Signup = ({ location, history }) => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { loading, error, userInfo } = userLogin;\r\n\r\n\t// const redirect = location.search ? location.search.split('=')[1] : '/questionair'\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInfo) {\r\n\t\t\tif (userInfo.isAdmin === false) {\r\n\t\t\t\t// history.push(\"/questionair\")\r\n\t\t\t\thistory.push(`/dashboard/profile/${userInfo._id}`);\r\n\t\t\t} else {\r\n\t\t\t\thistory.push(`/admindashboard/profile/${userInfo._id}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [history, userInfo]);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(login(email, password));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FormContainer className=\"h-100\">\r\n\t\t\t<Container className=\"border rounded-sm shadow col-lg-9  h-100 p-5 my-4 \">\r\n\t\t\t\t<h1 className=\"text-center pb-3\">Sign In</h1>\r\n\t\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\r\n\t\t\t\t{loading && <Loader />}\r\n\t\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter email\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{/*style={{ backgroundColor: '#266150', ' color': 'white' }} */}\r\n\t\t\t\t\t<Button type=\"submit\" className=\"btn-outline-success\" block>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\r\n\t\t\t\t<Row className=\"py-3\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\tNew Customer?{' '}\r\n\t\t\t\t\t\t{/* <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}> */}\r\n\t\t\t\t\t\t<Link style={{ color: '#007bff' }} to=\"/register\">\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</FormContainer>\r\n\t);\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './Message'\r\nimport Loader from './Loader'\r\nimport FormContainer from './FormContainer'\r\nimport { register } from '../actions/userLoginActions.js'\r\n\r\nconst Register = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [contact, setContact] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error } = userRegister\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    // const { loading, error, userInfo } = userLogin\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    // const redirect = location.search ? location.search.split('=')[1] : '/login'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            // history.push(redirect)\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [history, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (name === \"\") {\r\n            setMessage('All fields are Mandatory')\r\n        } else if (contact.length !== 10) {\r\n            setMessage('contact should have 10 digits')\r\n        } else if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            setMessage(null)\r\n            dispatch(register(name, email, contact, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Container className=\"border rounded-sm shadow col-lg-10  h-100 pt-3 pb-2 pr-5 pl-5\">\r\n                <h1 className=\"text-center pb-2\">Sign Up</h1>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='contact'>\r\n                        <Form.Label>Contact</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter Contact'\r\n                            value={contact}\r\n                            onChange={(e) => setContact(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary' block>\r\n                        Register\r\n                </Button>\r\n                </Form>\r\n\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        Have an Account?{' '}\r\n                        {/* <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}> */}\r\n                        <Link to='/login'>\r\n\r\n                            Login\r\n          </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Register","import axios from \"axios\"\r\nimport {\r\n    USER_APPOINTMENT_HISTORY_FAIL,\r\n    USER_APPOINTMENT_HISTORY_REQUEST,\r\n    USER_APPOINTMENT_HISTORY_SUCCESS,\r\n    USER_BOOK_APPOINTMENT_FAIL,\r\n    USER_BOOK_APPOINTMENT_REQUEST,\r\n    USER_BOOK_APPOINTMENT_SUCCESS,\r\n    USER_PERIODIC_APPOINTMENT_HISTORY_FAIL,\r\n    USER_PERIODIC_APPOINTMENT_HISTORY_REQUEST,\r\n    USER_PERIODIC_APPOINTMENT_HISTORY_SUCCESS,\r\n    USER_UPDATE_APPOINTMENT_FAIL,\r\n    USER_UPDATE_APPOINTMENT_REQUEST,\r\n    USER_UPDATE_APPOINTMENT_SUCCESS\r\n} from \"../constants/appointmentConstants.js\"\r\n\r\nexport const appointmentHistory = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_APPOINTMENT_HISTORY_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            \"/api/appointments/app\",\r\n            { id },\r\n            config\r\n        )\r\n\r\n\r\n\r\n        dispatch({\r\n            type: USER_APPOINTMENT_HISTORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_APPOINTMENT_HISTORY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const periodicAppointmentHistory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_PERIODIC_APPOINTMENT_HISTORY_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            \"/api/appointments/periodic\",\r\n            config\r\n        )\r\n\r\n        // const { data } = await axios.get(\r\n        //     \"/api/appointments/app\",\r\n        //     { id },\r\n        //     config\r\n        // )\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: USER_PERIODIC_APPOINTMENT_HISTORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_PERIODIC_APPOINTMENT_HISTORY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const bookAppointment = (user, date, slot) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_BOOK_APPOINTMENT_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            \"/api/appointments/book\",\r\n            { user, date, slot },\r\n            config\r\n        )\r\n        console.log(data)\r\n\r\n\r\n        dispatch({\r\n            type: USER_BOOK_APPOINTMENT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_BOOK_APPOINTMENT_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateAppointmentScore = (appointment) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_APPOINTMENT_REQUEST,\r\n        })\r\n\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\"/api/appointments/update\", appointment, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_APPOINTMENT_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_APPOINTMENT_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from \"./Message\"\r\nimport Loader from \"./Loader\"\r\nimport { appointmentHistory } from '../actions/appointmentActions.js'\r\nimport { Table, Button } from \"react-bootstrap\"\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nvar DATE = null\r\nvar SLOT = null\r\nvar ID = null\r\n\r\nfunction Records({ location, history }) {\r\n    const [message, setMessage] = useState(null)\r\n    const [details, setDetails] = useState({ date: null, slot: null, id: null })\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const bookedAppointments = useSelector((state) => state.bookAppointment)\r\n    const { bookAppointments } = bookedAppointments\r\n\r\n\r\n    // const { appointments, extra } = userAppointments\r\n\r\n\r\n    const AppointmentHistory = useSelector((state) => state.appointmentHistory)\r\n    const { Loading, Error, userAppointments } = AppointmentHistory\r\n\r\n    console.log(\"appppp\")\r\n    console.log(SLOT)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(appointmentHistory(userInfo._id))\r\n\r\n    }, [userInfo, dispatch, userLogin, bookAppointments, history])\r\n\r\n    function assignValue(e) {\r\n        setDetails({ date: e.target.name, slot: e.target.id, id: userInfo._id })\r\n        console.log(e.target.name)\r\n        DATE = e.target.name\r\n        SLOT = e.target.id\r\n        ID = userInfo._id\r\n        console.log(\"success\")\r\n        console.log(DATE + \"---\" + SLOT)\r\n        console.log(details)\r\n    }\r\n\r\n    console.log(details)\r\n\r\n    return (\r\n        <>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {loading && <Loader />}\r\n\r\n            <Table className=\"text-center mt-5 ml-auto mr-auto\" striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Slot no</th>\r\n                        <th>Accessment score</th>\r\n                        <th>Prescription</th>\r\n                        {/* <th>Doctor</th> */}\r\n                    </tr>\r\n\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n\r\n\r\n\r\n\r\n\r\n                        (loading || Loading) ? (\r\n                            <Loader />\r\n\r\n                        ) : error ? (\r\n                            <Message variant=\"danger\">{error}</Message>\r\n                        ) : Error ? (\r\n                            <Message variant=\"danger\">{Error}</Message>\r\n                        ) : (typeof (userAppointments) !== 'undefined') ? (\r\n                            userAppointments.map((object) => {\r\n                                let { accept, _id, user, doctor, date, slot, accessmentScore, prescription } = object\r\n                                var d = new Date(date);\r\n                                var dd = new Date(d.getTime() - 60 * 60 * 1000 * 5.5)\r\n                                var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n                                let formatedDate = dd.getDate() + \"-\" + months[dd.getMonth()] + \"-\" + dd.getFullYear();\r\n                                let timeslot = [\"10-10:30\", \"10:30-11\", \"11-11:30\", \"11:30-12\", \"12-12:30\"]\r\n                                let formatedSlot = timeslot[slot]\r\n\r\n\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{formatedDate}</td>\r\n                                        <td>{formatedSlot}</td>\r\n                                        <td>{accessmentScore == null\r\n                                            ?\r\n                                            <LinkContainer to=\"/questionair\">\r\n                                                <Button\r\n                                                    id={slot}\r\n                                                    name={date}\r\n                                                    value={date}\r\n                                                    onClick={((e) => { assignValue(e) })}\r\n                                                // onClick={((e) => { setDetails({ date: date, slot: slot, id: user }) })}\r\n                                                >\r\n                                                    Take Assessment\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n\r\n\r\n\r\n                                            : accessmentScore}</td>\r\n                                        <td>{prescription}</td>\r\n                                        {/* <td>{doctor.name}</td> */}\r\n                                    </tr>\r\n\r\n                                )\r\n                            })\r\n                        ) : <p></p>\r\n                    }\r\n\r\n\r\n                </tbody>\r\n\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Records\r\nexport { DATE, SLOT, ID }\r\n{/* <LinkContainer to=\"/questionair\" >\r\n<Button\r\n    name={date}\r\n    value={slot}\r\n    onClick={(e) => setDetails({ date: e.target.name, slot: e.target.value, id: _id })}\r\n>\r\n    Take Accessment\r\n</Button>\r\n</LinkContainer> */}","import React, { useState, useEffect } from \"react\"\r\nimport { Container, Row, Col, Card, Button,Form } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { listQuestionair } from \"../actions/questionairActions.js\"\r\nimport Message from \"./Message\"\r\nimport Loader from \"./Loader\"\r\nimport {DATE,SLOT,ID} from \"./Records\"\r\nimport {updateAppointmentScore} from \"../actions/appointmentActions.js\"\r\nlet Score = Number(0)\r\n\r\nfunction Questionnair({ location, history }) {\r\n    const [radio, setRadio] = useState({})\r\n\r\n    // const [questionair,setQuestionair] = useState([])\r\n    const dispatch = useDispatch()\r\n    const questionairList = useSelector(state => state.questionairList)\r\n    const { loading, error, questionair } = questionairList\r\n    \r\n    \r\n    useEffect(() => {\r\n        dispatch(listQuestionair())\r\n        \r\n        // const fetchQuestionair = async () => {\r\n        //     const { data } = await axios.get(\"/api/questionair\")\r\n        //     setQuestionair(data)\r\n        // }   \r\n        // fetchQuestionair()\r\n    }, [dispatch])\r\n\r\n    let total = Number(0)\r\n    let counter = Number(0)\r\n\r\n    for (const item in radio) {\r\n        total += Number(radio[item])\r\n    }\r\n\r\n    function assignValue() {\r\n        Score = total\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        Score = total\r\n        console.log(Score)\r\n        console.log(\"questionaie called\")\r\n        e.preventDefault()\r\n        dispatch(updateAppointmentScore({ date: DATE,slot: SLOT,id: ID,score: total}))\r\n        history.push('/score')\r\n     \r\n    }\r\n    \r\n\r\n    return (\r\n        <Container className=\"col-lg-6\">\r\n        {/* <h4>date {DATE} slot: {SLOT} id: {ID} total: {total}</h4> */}\r\n         {loading ? (\r\n                        <Loader />\r\n\r\n                    ) : error ? (\r\n                        <Message variant=\"danger\">{error}</Message>\r\n                    ) : (\r\n            <Container className=\"mb-5\">\r\n                {\r\n                   \r\n\r\n\r\n\r\n                        questionair.map((object) => {\r\n                            let {question, options } = object\r\n                            counter += 1\r\n                            return (\r\n                                < >\r\n                                    <Row >\r\n                                        <Card className=\"mt-2 w-100\">\r\n\r\n                                            <Card.Body>\r\n                                                <label>{counter + \")\"} {question}</label>\r\n                                            </Card.Body>\r\n\r\n\r\n\r\n                                            {options.map((singleOption) => {\r\n                                                return (\r\n                                                    <Col>\r\n\r\n                                                        <label >\r\n                                                            <input type=\"radio\"\r\n                                                                id={counter}\r\n                                                                checked={Number(radio[counter]) === Number(singleOption.points)}\r\n                                                                value={singleOption.points}\r\n                                                                onChange={(e) => { setRadio({ ...radio, [e.target.id]: e.target.value }) }}\r\n                                                                className=\"ml-3\"\r\n\r\n                                                            />\r\n                                                            <span className=\"p-3\">{singleOption.option}</span>\r\n                                                            {/* <input type=\"radio\"\r\n                                                            id={id}\r\n                                                            checked={Number(radio[id]) === Number(singleOption.points)}\r\n                                                            value={singleOption.points}\r\n                                                            onChange={(e) => { setRadio({ ...radio, [e.target.id]: e.target.value })}}\r\n                                                            className=\"ml-3\"\r\n\r\n                                                        />\r\n                                                        <span className=\"p-3\">{singleOption.option}</span>\r\n */}\r\n\r\n\r\n                                                        </label>\r\n                                                    </Col>\r\n                                                )\r\n                                            })}\r\n                                        </Card>\r\n\r\n                                    </Row>\r\n\r\n                                </>\r\n                            )\r\n                        })\r\n                }\r\n                <Row>\r\n                <Form onSubmit={(e)=>submitHandler(e)} className=\"w-100\">\r\n                    \r\n                       <Button variant=\"primary\" type='submit' className=\"mt-2\" block>\r\n                       \r\n                            Submit\r\n                        \r\n                       </Button>\r\n                 \r\n                </Form>\r\n                </Row>\r\n\r\n            </Container>\r\n            )}\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Questionnair\r\nexport { Score }","import axios from \"axios\"\r\nimport { QUESTIONAIR_REQUEST, QUESTIONAIR_SUCCESS, QUESTIONAIR_FAIL } from \"../constants/questionairConstants.js\"\r\n\r\nexport const listQuestionair = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: QUESTIONAIR_REQUEST })\r\n\r\n        const { data } = await axios.get(\"/api/questionair\")\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: QUESTIONAIR_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: QUESTIONAIR_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Button } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Score } from \"./Questionnair\"\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Scores extends React.Component {\r\n\r\n\r\n    state = {\r\n        dataBar: {\r\n            labels: [\"Your Score\"],\r\n            datasets: [\r\n                {\r\n\r\n                    label: \"Your Score: \" + Score,\r\n                    data: [Score],\r\n                    backgroundColor: [\r\n                        \"rgba(255, 134,159,0.4)\"\r\n\r\n                    ],\r\n                    borderWidth: 2,\r\n                    borderColor: [\r\n                        \"rgba(255, 134, 159, 1)\"\r\n\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        options: {\r\n\r\n\r\n            animations: {\r\n                tension: {\r\n                    duration: 1000,\r\n                    easing: 'linear',\r\n                    from: 1,\r\n                    to: 0,\r\n                    loop: true\r\n                }\r\n            }\r\n        },\r\n        barChartOptions: {\r\n            responsive: true,\r\n            maintainAspectRatio: true,\r\n            scales: {\r\n                xAxes: [\r\n                    {\r\n                        barPercentage: 0.1,\r\n                        gridLines: {\r\n                            display: true,\r\n                            color: \"rgba(0, 0, 0, 0.1)\"\r\n                        }\r\n                    }\r\n                ],\r\n                yAxes: [\r\n                    {\r\n\r\n                        gridLines: {\r\n\r\n                            display: true,\r\n                            color: \"rgba(0, 0, 0, 0.1)\"\r\n                        },\r\n\r\n                        ticks: {\r\n                            suggestedMax: 20,\r\n                            min: 0,\r\n                            max: 20,\r\n                            stepSize: 1,\r\n\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n\r\n            <MDBContainer className=\"w-75\">\r\n                <h3 className=\"mt-5\">Results</h3>\r\n                <Bar data={this.state.dataBar} options={this.state.barChartOptions} />\r\n                {/* <LinkContainer to={`/dashboard/profile/${id}`}>\r\n                    <Button> Dashboard </Button>\r\n                </LinkContainer> */}\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*  return (\r\n      <>\r\n\r\n\r\n\r\n      \r\n          <Container className=\"w-50\">\r\n              <ProgressBar now={percent} animated label={percent + \" %\"} className=\"text-center\" />\r\n              <LinkContainer to=\"/dashboard\">\r\n                  <Button> Dashboard </Button>\r\n              </LinkContainer>\r\n          </Container>\r\n\r\n      </>\r\n  )\r\n}*/\r\n\r\nexport default Scores\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import { Container, ProgressBar, Button } from \"react-bootstrap\"\r\n// import { LinkContainer } from \"react-router-bootstrap\"\r\n// import { Score } from \"./Questionnair\"\r\n\r\n// function Scores() {\r\n\r\n//     const percent = (Score / 20) * 100\r\n\r\n\r\n//     return (\r\n//         <>\r\n//             <Container className=\"w-50\">\r\n//                 <ProgressBar now={percent} animated label={percent + \" %\"} className=\"text-center\" />\r\n//                 <LinkContainer to={`/dashboard/profile/${Number(1)}`}>\r\n//                     <Button> Dashboard </Button>\r\n//                 </LinkContainer>\r\n//             </Container>\r\n\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Scores\r\n","import {\r\n    USER_PROFILE_REQUEST,\r\n    USER_PROFILE_SUCCESS,\r\n    USER_PROFILE_FAIL\r\n}\r\n    from \"../constants/userProfileConstants.js\"\r\nimport axios from \"axios\"\r\n\r\nexport const userProfile = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_PROFILE_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/profile/${id}`)\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: USER_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Row, Col, Container, Image, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { userProfile } from \"../actions/userProfileAction.js\"\r\nimport { updateUserProfile } from \"../actions/userLoginActions.js\"\r\nimport Loader from \"./Loader\"\r\nimport Message from \"./Message\"\r\nimport { USER_PROFILE_UPDATE_RESET } from \"../constants/userLoginConstants\"\r\n\r\nfunction Profile({ match, location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [contact, setContact] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const userProfileData = useSelector(state => state.profile)\r\n    const { loading, error, user } = userProfileData\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const updatedUserProfile = useSelector((state) => state.updateUserProfile)\r\n    let { success } = updatedUserProfile\r\n\r\n    useEffect(() => {\r\n        // dispatch(userProfile(match.params.id))\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n\r\n            if (user._id !== userInfo._id) {\r\n                dispatch(userProfile(userInfo._id))\r\n            }\r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: USER_PROFILE_UPDATE_RESET })\r\n                // dispatch(userProfile(match.params.id))\r\n                dispatch(userProfile(userInfo._id))\r\n\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setGender(user.gender)\r\n                setAge(user.age)\r\n                setContact(user.contact)\r\n            }\r\n        }\r\n    }, [dispatch, match, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password === \"\") {\r\n            setMessage('Password Cannot be Empty')\r\n        }\r\n        else if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else if (age <= 10 || age >= 100) {\r\n            setMessage('age should be between 10-100 ')\r\n        } else if (contact.length !== 10) {\r\n            setMessage('contact should have 10 digits')\r\n        } else {\r\n            setMessage('Profile Updated Successfully')\r\n            dispatch(updateUserProfile({ id: user._id, name, age, gender, email, contact, password }))\r\n\r\n        }\r\n    }\r\n    var sm = \"Profile Updated\"\r\n    // const { name, age, gender, email, contact } = user\r\n    console.log(\"gender\" + gender)\r\n\r\n    return (\r\n\r\n        <Container className=\"border rounded-sm col-lg-11  h-75 pt-3 pb-5 pr-5 pl-5\">\r\n\r\n            {message && (message === \"Profile Updated Successfully\" ? <Message variant='success'>{message}</Message> : <Message variant='danger'>{message}</Message>)}\r\n            {/* {success && <Message variant='success'>{sm}</Message>} */}\r\n            {\r\n                loading ? (\r\n                    <Loader />\r\n\r\n                ) : error ? (\r\n                    <Message variant=\"danger\">{error}</Message>\r\n                ) : (\r\n                    <Row>\r\n                        <Col lg={3}>\r\n                            <Image src=\"/images/profile.jpg\" width={171} height={180} thumbnail />\r\n\r\n                        </Col>\r\n                        <Col lg={9}>\r\n                            <Form onSubmit={submitHandler} >\r\n                                <Form.Group>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Label>Gender</Form.Label>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <label>\r\n                                                        <input type=\"radio\"\r\n                                                            id=\"gender\"\r\n                                                            checked={gender === \"male\"}\r\n                                                            value=\"male\"\r\n                                                            onChange={(e) => { setGender(\"male\") }}\r\n                                                            className=\"mr-2\"\r\n\r\n                                                        /><span>Male</span>\r\n                                                        {/* <Form.Check\r\n                                                            checked={gender === \"male\"}\r\n                                                            type=\"radio\"\r\n                                                            label=\"Male\"\r\n                                                            id=\"gender\"\r\n                                                            onChange={(e) => { setGender(\"male\") }}\r\n                                                        /> */}\r\n                                                    </label>\r\n\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <label>\r\n                                                        <input type=\"radio\"\r\n                                                            id=\"gender\"\r\n                                                            checked={gender === \"female\"}\r\n                                                            value=\"male\"\r\n                                                            onChange={(e) => { setGender(\"female\") }}\r\n                                                            className=\"mr-2\"\r\n\r\n                                                        /><span>Female</span>\r\n                                                        {/* <Form.Check\r\n                                                            checked={gender === \"female\"}\r\n                                                            type=\"radio\"\r\n                                                            label=\"Female\"\r\n                                                            id=\"gender\"\r\n                                                            onChange={(e) => { setGender(\"female\") }}\r\n                                                        /> */}\r\n                                                    </label>\r\n\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <label>\r\n                                                        <input type=\"radio\"\r\n                                                            id=\"gender\"\r\n                                                            checked={gender === \"other\"}\r\n                                                            value=\"other\"\r\n                                                            onChange={(e) => { setGender(\"other\") }}\r\n                                                            className=\"mr-2\"\r\n\r\n                                                        /><span>Other</span>\r\n                                                        {/* <Form.Check\r\n                                                            checked={gender === \"other\"}\r\n                                                            type=\"radio\"\r\n                                                            label=\"Other\"\r\n                                                            id=\"gender\"\r\n                                                            onChange={(e) => { setGender(\"other\") }}\r\n                                                        /> */}\r\n                                                    </label>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            {/* <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter gender\"\r\n                                                value={gender}\r\n                                                onChange={(e) => setGender(e.target.value)}\r\n\r\n                                            /> */}\r\n                                            {/* <input type=\"radio\"\r\n                                                id=\"gender\"\r\n                                                checked={gender === \"male\"}\r\n                                                value=\"male\"\r\n                                                onChange={(e) => { setGender(\"male\") }} \r\n                                                className=\"ml-3\"\r\n\r\n                                            /><span>Male</span> */}\r\n\r\n\r\n\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Label>Age</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter age\"\r\n                                                value={age}\r\n                                                onChange={(e) => setAge(e.target.value)}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter email\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                        readOnly\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Contact</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Contact\"\r\n                                        value={contact}\r\n                                        onChange={(e) => setContact(e.target.value)}\r\n\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group >\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type='password'\r\n                                        placeholder='Enter password'\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type='password'\r\n                                        placeholder='Confirm password'\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Button type='submit' variant='primary'>\r\n                                    Update Profile & Password\r\n                                </Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                )\r\n            }\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Button, Form, Row, Col, Container } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { periodicAppointmentHistory, bookAppointment, appointmentHistory } from \"../actions/appointmentActions.js\"\r\nimport { USER_PERIODIC_APPOINTMENT_HISTORY_REQUEST, USER_PERIODIC_APPOINTMENT_HISTORY_SUCCESS } from '../constants/appointmentConstants.js'\r\nimport Loader from \"./Loader\"\r\nimport Message from \"./Message\"\r\n\r\nfunction Scheduler() {\r\n    const [slotno, setSlot] = useState({ date: null, slot: null })\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const periodic = useSelector((state) => state.periodicHistory)\r\n    const { loading, error, periodicAppointments } = periodic\r\n\r\n    console.log(periodicAppointments)\r\n\r\n    const bookedAppointments = useSelector((state) => state.bookAppointment)\r\n    const { Loading, Error, bookAppointments } = bookedAppointments\r\n\r\n    console.log(\"message\" + message)\r\n\r\n\r\n    useEffect(() => {\r\n        if (Loading || Error) {\r\n            dispatch(periodicAppointmentHistory())\r\n            dispatch(appointmentHistory(userInfo._id))\r\n\r\n        }\r\n        dispatch(periodicAppointmentHistory())\r\n        console.log(\"called\")\r\n\r\n    }, [dispatch, userLogin, Loading, Error, bookAppointments])\r\n\r\n    let boo = false\r\n    const submitHandler = (e) => {\r\n        // e.preventDefault()\r\n        if (slotno.slot !== null) {\r\n            dispatch(bookAppointment(userInfo._id, slotno.date, slotno.slot))\r\n            dispatch(periodicAppointmentHistory())\r\n            dispatch(appointmentHistory(userInfo._id))\r\n            boo = true\r\n            // if (typeof (bookAppointments) !== undefined) {\r\n            //     if (slotno.slot == bookAppointments.slot) {\r\n            //         setMessage(\"Success\")\r\n            //         console.log(\"sccccccccccccc\")\r\n            //     } else {\r\n            //         setMessage(null)\r\n            //     }\r\n\r\n            // }\r\n\r\n\r\n\r\n            // periodic = useSelector((state) => state.periodicHistory)\r\n            // const { loading, error, periodicAppointments } = periodic\r\n        }\r\n        // e.preventDefault()\r\n        // if (slotno.slot !== null) {\r\n\r\n        //     dispatch(bookAppointment(userInfo._id, slotno.date, slotno.slot))\r\n        //     dispatch(periodicAppointmentHistory())\r\n\r\n        //     // periodic = useSelector((state) => state.periodicHistory)\r\n        //     // const { loading, error, periodicAppointments } = periodic\r\n        // }\r\n\r\n    }\r\n\r\n    console.log(slotno.date)\r\n    console.log(slotno.slot)\r\n\r\n    let slots = [\"10:00\", \"10:30\", \"11:00\", \"11:30\", \"12:00\"]\r\n    let week = [0, 1, 2, 3, 4, 5, 6]\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    let d = new Date(slotno.date)\r\n    let c = new Date(d.getTime() - 1000 * 60 * 60 * 5.5)\r\n    let ddd = c.getDate()\r\n    let m = c.getMonth()\r\n    let y = c.getFullYear()\r\n    const success = \"Appointment booked successfully\"\r\n\r\n\r\n    return (\r\n        <>\r\n            {  Error ? <div className=\"mt-3\"><Message variant='danger'>{Error}</Message> </div> : <div className=\"mt-3\"><Message variant='success'>{success}</Message></div>}\r\n            {/* {  message && <Message variant='success'>{message}</Message>} */}\r\n            {\r\n\r\n\r\n                error ? <Message variant='danger'>{error}</Message> :\r\n                    loading\r\n                        ? <Loader />\r\n                        : <> {slotno.slot ? <h7>\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Container>\r\n                                    <Row className=\"m-4\">\r\n                                        <Col><h5 className=\"text-success\">You choose slot on {ddd + \"-\" + months[m] + \"-\" + y} at {slots[slotno.slot]} AM</h5>\r\n                                        </Col>\r\n                                        <Col><Button type='submit' variant='success'>\r\n                                            Book Appointment\r\n                                  </Button></Col>\r\n                                    </Row>\r\n                                </Container>\r\n\r\n                            </Form>\r\n\r\n                        </h7> : <p></p>}\r\n\r\n                            <Table className=\"text-center\" bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>10:00 AM</th>\r\n                                        <th>10:30 AM</th>\r\n                                        <th>11:00 AM</th>\r\n                                        <th>11:30 AM</th>\r\n                                        <th>12:00 AM</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n\r\n                                    {\r\n                                        (typeof (week) !== 'undefined') ? (\r\n                                            week.map((object) => {\r\n                                                let dateValidateObject = new Date()\r\n                                                {/* if (object == 0) {\r\n                                                var dateObject = new Date(dateValidateObject.getTime() + 5.5 * 1000 * 60 * 60)\r\n                                            } else {\r\n                                                var dateObject = new Date(dateValidateObject.getTime() + 1000 * 60 * 60 * 24 * object + 5.5 * 1000 * 60 * 60)\r\n                                            } */}\r\n                                                var dateObject = new Date(dateValidateObject.getTime() + 1000 * 60 * 60 * 24 * object)\r\n                                                var toutc = new Date(dateObject.getTime() + 1000 * 60 * 60 * 5.5).toISOString();\r\n\r\n                                                let dd = dateObject.getDate()\r\n                                                let mm = dateObject.getMonth()\r\n                                                let yyyy = dateObject.getFullYear()\r\n                                                let formatedDate = dateObject.getDate() + \"-\" + months[dateObject.getMonth()] + \"-\" + dateObject.getFullYear();\r\n                                                let numberButtons = [0, 1, 2, 3, 4]\r\n                                                let boolArray = [0, 0, 0, 0, 0]\r\n\r\n                                                return (\r\n\r\n                                                    <tr>\r\n                                                        <th>{formatedDate}</th>\r\n                                                        {(typeof (periodicAppointments) !== 'undefined') ? (\r\n                                                            periodicAppointments.map((object) => {\r\n\r\n                                                                const { date, slot } = object\r\n                                                                let date1 = new Date(date)\r\n                                                                var date2 = new Date(date1.getTime() - 1000 * 60 * 60 * 5.5);\r\n                                                                let formatedDate2 = date2.getDate() + \"-\" + months[date2.getMonth()] + \"-\" + date2.getFullYear();\r\n                                                                if (formatedDate == formatedDate2) {\r\n                                                                    boolArray[slot] = 1\r\n                                                                }\r\n\r\n\r\n                                                            })\r\n                                                        ) : null\r\n                                                        }\r\n                                                        {\r\n\r\n\r\n                                                            numberButtons.map((SLOT) => {\r\n\r\n                                                                return (<td>\r\n                                                                    <Button\r\n                                                                        variant={1 == boolArray[SLOT] ? \"danger\" : \"outline-success\"}\r\n                                                                        // name={new Date(yyyy, mm, dd)}\r\n                                                                        name={toutc}\r\n\r\n                                                                        value={SLOT}\r\n                                                                        onClick={(e) => setSlot({ date: e.target.name, slot: e.target.value })}\r\n                                                                        disabled={1 == boolArray[SLOT] ? true : false}\r\n\r\n                                                                    >\r\n                                                                        {1 == boolArray[SLOT] ? \"NOT AVAILABLE\" : \"AVAILABLE\"}\r\n                                                                    </Button>\r\n                                                                </td>\r\n                                                                )\r\n                                                            })\r\n\r\n\r\n                                                        }\r\n\r\n                                                    </tr>\r\n                                                )\r\n\r\n\r\n                                            })\r\n\r\n\r\n\r\n\r\n                                        ) : <p></p>\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n                                </tbody>\r\n\r\n                            </Table></>\r\n            }\r\n\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n// periodicAppointments.map((object) => {\r\n//     let dateValidateObject = new Date()\r\n\r\n//     let { date, slot } = object\r\n//     let dateObject = new Date(date)\r\n\r\n//     var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n//     let dd = dateObject.getDate()\r\n//     let mm = dateObject.getMonth()\r\n//     let yyyy = dateObject.getFullYear()\r\n//     let formatedDate = dateObject.getDate() + \"-\" + months[dateObject.getMonth()] + \"-\" + dateObject.getFullYear();\r\n//     let numberButtons = [0, 1, 2, 3, 4]\r\n//     let week = [0, 1, 2, 3, 4, 5, 6]\r\n\r\n//     return (\r\n\r\n//         <tr>\r\n//             <th>{formatedDate}</th>\r\n\r\n\r\n//             {\r\n//                 numberButtons.map((SLOT) => {\r\n//                     return (<td>\r\n//                         <Button\r\n//                             variant=\"primary\"\r\n//                             name={new Date(yyyy, mm, dd)}\r\n//                             value={SLOT}\r\n//                             onClick={(e) => setSlot({ [e.target.name]: e.target.value })}\r\n//                             disabled={SLOT == slot ? true : false}\r\n//                         >\r\n//                             10-10:30\r\n//                         </Button>\r\n//                     </td>\r\n//                     )\r\n//                 })\r\n//             }\r\n\r\n//         </tr>\r\n//     )\r\n\r\n// })\r\n\r\nexport default Scheduler\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Button, Form, Row, Col, Container } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { periodicAppointmentHistory, bookAppointment, appointmentHistory } from \"../actions/appointmentActions.js\"\r\nimport { USER_PERIODIC_APPOINTMENT_HISTORY_REQUEST, USER_PERIODIC_APPOINTMENT_HISTORY_SUCCESS } from '../constants/appointmentConstants.js'\r\nimport Loader from \"./Loader\"\r\nimport Message from \"./Message\"\r\n\r\nfunction AdminScheduler() {\r\n    const [slotno, setSlot] = useState({ date: null, slot: null })\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const periodic = useSelector((state) => state.periodicHistory)\r\n    const { loading, error, periodicAppointments } = periodic\r\n\r\n    console.log(periodicAppointments)\r\n\r\n    const bookedAppointments = useSelector((state) => state.bookAppointment)\r\n    const { Loading, Error, bookAppointments } = bookedAppointments\r\n\r\n    console.log(\"message\" + message)\r\n\r\n\r\n    useEffect(() => {\r\n        if (Loading || Error) {\r\n            dispatch(periodicAppointmentHistory())\r\n            dispatch(appointmentHistory(userInfo._id))\r\n\r\n        }\r\n        dispatch(periodicAppointmentHistory())\r\n        console.log(\"called\")\r\n\r\n    }, [dispatch, userLogin, Loading, Error, bookAppointments])\r\n\r\n    let boo = false\r\n    const submitHandler = (e) => {\r\n        // e.preventDefault()\r\n        if (slotno.slot !== null) {\r\n            dispatch(bookAppointment(userInfo._id, slotno.date, slotno.slot))\r\n            dispatch(periodicAppointmentHistory())\r\n            dispatch(appointmentHistory(userInfo._id))\r\n            boo = true\r\n\r\n        }\r\n\r\n    }\r\n\r\n    console.log(slotno.date)\r\n    console.log(slotno.slot)\r\n\r\n    let slots = [\"10:00\", \"10:30\", \"11:00\", \"11:30\", \"12:00\"]\r\n    let week = [0, 1, 2, 3, 4, 5, 6]\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    let d = new Date(slotno.date)\r\n    let c = new Date(d.getTime() - 1000 * 60 * 60 * 5.5)\r\n    let ddd = c.getDate()\r\n    let m = c.getMonth()\r\n    let y = c.getFullYear()\r\n    const success = \"Appointment booked successfully\"\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* {  Error ? <div className=\"mt-3\"><Message variant='danger'>{Error}</Message> </div> : <div className=\"mt-3\"><Message variant='success'>{success}</Message></div>} */}\r\n            {/* {  message && <Message variant='success'>{message}</Message>} */}\r\n            {\r\n\r\n\r\n                error ? <Message variant='danger'>{error}</Message> :\r\n                    loading\r\n                        ? <Loader />\r\n                        : <> {slotno.slot ? <h7>\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Container>\r\n                                    <Row className=\"m-4\">\r\n                                        <Col><h5 className=\"text-success\">You choose slot on {ddd + \"-\" + months[m] + \"-\" + y} at {slots[slotno.slot]} AM</h5>\r\n                                        </Col>\r\n                                        <Col><Button type='submit' variant='success'>\r\n                                            Book Appointment\r\n                                  </Button></Col>\r\n                                    </Row>\r\n                                </Container>\r\n\r\n                            </Form>\r\n\r\n                        </h7> : <p></p>}\r\n\r\n                            <Table className=\"text-center\" bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>10:00 AM</th>\r\n                                        <th>10:30 AM</th>\r\n                                        <th>11:00 AM</th>\r\n                                        <th>11:30 AM</th>\r\n                                        <th>12:00 AM</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n\r\n                                    {\r\n                                        (typeof (week) !== 'undefined') ? (\r\n                                            week.map((object) => {\r\n                                                let dateValidateObject = new Date()\r\n                                                {/* if (object == 0) {\r\n                                                var dateObject = new Date(dateValidateObject.getTime() + 5.5 * 1000 * 60 * 60)\r\n                                            } else {\r\n                                                var dateObject = new Date(dateValidateObject.getTime() + 1000 * 60 * 60 * 24 * object + 5.5 * 1000 * 60 * 60)\r\n                                            } */}\r\n                                                var dateObject = new Date(dateValidateObject.getTime() + 1000 * 60 * 60 * 24 * object)\r\n                                                var toutc = new Date(dateObject.getTime() + 1000 * 60 * 60 * 5.5).toISOString();\r\n\r\n                                                let dd = dateObject.getDate()\r\n                                                let mm = dateObject.getMonth()\r\n                                                let yyyy = dateObject.getFullYear()\r\n                                                let formatedDate = dateObject.getDate() + \"-\" + months[dateObject.getMonth()] + \"-\" + dateObject.getFullYear();\r\n                                                let numberButtons = [0, 1, 2, 3, 4]\r\n                                                let boolArray = [0, 0, 0, 0, 0]\r\n\r\n                                                return (\r\n\r\n                                                    <tr>\r\n                                                        <th>{formatedDate}</th>\r\n                                                        {(typeof (periodicAppointments) !== 'undefined') ? (\r\n                                                            periodicAppointments.map((object) => {\r\n\r\n                                                                const { date, slot } = object\r\n                                                                let date1 = new Date(date)\r\n                                                                var date2 = new Date(date1.getTime() - 1000 * 60 * 60 * 5.5);\r\n                                                                let formatedDate2 = date2.getDate() + \"-\" + months[date2.getMonth()] + \"-\" + date2.getFullYear();\r\n                                                                if (formatedDate == formatedDate2) {\r\n                                                                    boolArray[slot] = 1\r\n                                                                }\r\n\r\n\r\n                                                            })\r\n                                                        ) : null\r\n                                                        }\r\n                                                        {\r\n\r\n\r\n                                                            numberButtons.map((SLOT) => {\r\n\r\n                                                                return (<td>\r\n                                                                    <Button\r\n                                                                        variant={1 == boolArray[SLOT] ? \"danger\" : \"success\"}\r\n                                                                        // name={new Date(yyyy, mm, dd)}\r\n                                                                        name={toutc}\r\n\r\n                                                                        value={SLOT}\r\n                                                                        onClick={(e) => setSlot({ date: e.target.name, slot: e.target.value })}\r\n                                                                        disabled={1 == boolArray[SLOT] ? true : true}\r\n\r\n                                                                    >\r\n                                                                        {1 == boolArray[SLOT] ? \"BOOKED\" : \"FREE\"}\r\n                                                                    </Button>\r\n                                                                </td>\r\n                                                                )\r\n                                                            })\r\n\r\n\r\n                                                        }\r\n\r\n                                                    </tr>\r\n                                                )\r\n\r\n\r\n                                            })\r\n\r\n\r\n\r\n\r\n                                        ) : <p></p>\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n                                </tbody>\r\n\r\n                            </Table></>\r\n            }\r\n\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default AdminScheduler\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from \"./Message\"\r\nimport Loader from \"./Loader\"\r\nimport { appointmentHistory, periodicAppointmentHistory } from '../actions/appointmentActions.js'\r\nimport { Table, Button } from \"react-bootstrap\"\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nvar DATE = null\r\nvar SLOT = null\r\nvar ID = null\r\nvar OBJECT = null\r\n\r\nfunction WeeklyRecords({ location, history }) {\r\n    const [message, setMessage] = useState(null)\r\n    const [details, setDetails] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const periodic = useSelector((state) => state.periodicHistory)\r\n    const { loading, error, periodicAppointments } = periodic\r\n\r\n\r\n\r\n    const userAppointments = periodicAppointments\r\n\r\n    console.log(\"appppp\")\r\n    console.log(SLOT)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(periodicAppointmentHistory())\r\n\r\n    }, [userInfo, dispatch, userLogin, history])\r\n\r\n    function assignValue(e) {\r\n        setDetails(e.target.name)\r\n        console.log(e.target.name)\r\n        // DATE = e.target.name\r\n        // SLOT = e.target.id\r\n        ID = e.target.id\r\n        dispatch(appointmentHistory(ID))\r\n        OBJECT = e.target.name\r\n        console.log(\"success\")\r\n        console.log(e.target.name)\r\n        console.log(details)\r\n    }\r\n\r\n    console.log(details)\r\n\r\n    return (\r\n        <>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {/* {message && <Message variant='danger'>{message}</Message>} */}\r\n            {loading && <Loader />}\r\n\r\n            <Table className=\"text-center mt-5 ml-auto mr-auto\" striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Slot no</th>\r\n                        <th>Accessment score</th>\r\n                        <th>Name</th>\r\n                        <th>Details</th>\r\n                        {/* <th>Doctor</th> */}\r\n                    </tr>\r\n\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n\r\n\r\n\r\n\r\n\r\n                        (loading) ? (\r\n                            <Loader />\r\n\r\n                        ) : error ? (\r\n                            <Message variant=\"danger\">{error}</Message>\r\n                        ) : (typeof (userAppointments) !== 'undefined') ? (\r\n                            userAppointments.map((object) => {\r\n                                let { user, doctor, date, slot, accessmentScore } = object\r\n                                let { name, age, gender, email, contact } = user\r\n                                var d = new Date(date);\r\n                                var dd = new Date(d.getTime() - 60 * 60 * 1000 * 5.5)\r\n                                var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n                                let formatedDate = dd.getDate() + \"-\" + months[dd.getMonth()] + \"-\" + dd.getFullYear();\r\n                                let timeslot = [\"10-10:30\", \"10:30-11\", \"11-11:30\", \"11:30-12\", \"12-12:30\"]\r\n                                let formatedSlot = timeslot[slot]\r\n\r\n\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{formatedDate}</td>\r\n                                        <td>{formatedSlot}</td>\r\n                                        <td>{accessmentScore == null\r\n                                            ? <>\r\n\r\n                                                <Button\r\n                                                    id={slot}\r\n                                                    name={date}\r\n                                                    value={date}\r\n                                                    disabled\r\n                                                // onClick={((e) => { assignValue(e) })}\r\n                                                // onClick={((e) => { setDetails({ date: date, slot: slot, id: user }) })}\r\n                                                >\r\n                                                    Not Assessed\r\n                                                </Button>\r\n                                            </>\r\n\r\n\r\n\r\n                                            : accessmentScore}</td>\r\n\r\n                                        <td>{name}</td>\r\n                                        <td>\r\n                                            <LinkContainer to=\"/analysis\">\r\n                                                <Button\r\n                                                    id={user._id}\r\n                                                    name={user}\r\n\r\n                                                    onClick={((e) => { assignValue(e) })}\r\n                                                >\r\n                                                    Check Details\r\n                                                  </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                )\r\n                            })\r\n                        ) : null\r\n                    }\r\n\r\n\r\n                </tbody>\r\n\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeeklyRecords\r\nexport { DATE, SLOT, ID, OBJECT }\r\n{/* <LinkContainer to=\"/questionair\" >\r\n<Button\r\n    name={date}\r\n    value={slot}\r\n    onClick={(e) => setDetails({ date: e.target.name, slot: e.target.value, id: _id })}\r\n>\r\n    Take Accessment\r\n</Button>\r\n</LinkContainer> */}\r\n\r\n{/* <LinkContainer to=\"/questionair\">\r\n                                                <Button\r\n                                                    id={slot}\r\n                                                    name={date}\r\n                                                    value={date}\r\n                                                    onClick={((e) => { assignValue(e) })}\r\n                                                // onClick={((e) => { setDetails({ date: date, slot: slot, id: user }) })}\r\n                                                >\r\n                                                    Take Assessment\r\n                                                </Button>\r\n                                            </LinkContainer> */}","import React from 'react'\r\nimport { Tabs, Tab } from \"react-bootstrap\"\r\nimport Records from \"./Records\"\r\nimport Scheduler from \"./Scheduler\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport AdminScheduler from \"./AdminScheduler\"\r\nimport WeeklyRecords from \"./WeeklyRecords\"\r\nfunction Appointment() {\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    return (\r\n        <>{userInfo.isAdmin\r\n            ? <Tabs defaultActiveKey=\"appointment\">\r\n                <Tab eventKey=\"appointment\" title=\"Appointment Details\">\r\n                    <AdminScheduler />\r\n                </Tab>\r\n                <Tab eventKey=\"history\" title=\"Records\">\r\n                    <WeeklyRecords />\r\n                </Tab>\r\n            </Tabs>\r\n            :\r\n            <Tabs defaultActiveKey=\"appointment\">\r\n                <Tab eventKey=\"appointment\" title=\"Book Appointment\">\r\n                    <Scheduler />\r\n                </Tab>\r\n                <Tab eventKey=\"history\" title=\"Appointment Records\">\r\n                    <Records />\r\n                </Tab>\r\n            </Tabs>\r\n        }\r\n            {/* <Tabs defaultActiveKey=\"appointment\">\r\n                <Tab eventKey=\"appointment\" title=\"Book Appointment\">\r\n                    <Scheduler />\r\n                </Tab>\r\n                <Tab eventKey=\"history\" title=\"Appointment Records\">\r\n                    <Records />\r\n                </Tab>\r\n            </Tabs> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Appointment\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst data = {\r\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul'],\r\n    datasets: [\r\n        {\r\n            label: 'self Monitoring',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [5, 5, 6, 7, 12, 18, 20],\r\n        }\r\n    ]\r\n};\r\n\r\nconst lineOptions = {\r\n    scales: {\r\n        xAxes: [{\r\n            gridLines: {\r\n                display: true,\r\n            },\r\n        }],\r\n        yAxes: [{\r\n            // stacked: true,\r\n            gridLines: {\r\n                display: true,\r\n            },\r\n            ticks: {\r\n                beginAtZero: true,\r\n                // Return an empty string to draw the tick line but hide the tick label\r\n                // Return `null` or `undefined` to hide the tick line entirely\r\n                userCallback(value) {\r\n                    // Convert the number to a string and splite the string every 3 charaters from the end\r\n                    value = value.toString();\r\n                    value = value.split(/(?=(?:...)*$)/);\r\n\r\n                    // Convert the array to a string and format the output\r\n                    value = value.join('.');\r\n                    return `Score.${value}`;\r\n                },\r\n            },\r\n        }],\r\n    },\r\n    legend: {\r\n        display: true,\r\n    },\r\n    tooltips: {\r\n        enabled: true,\r\n    },\r\n};\r\n\r\n\r\nconst styles = {\r\n    fontFamily: 'sans-serif',\r\n    textAlign: 'center',\r\n};\r\n\r\n\r\n\r\nfunction LineChart(props) {\r\n    return (\r\n        <div style={styles}>\r\n            <Line data={props.data} options={lineOptions} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n\r\n\r\n// const LineChart = (props) => (\r\n//     <div style={styles}>\r\n//         <Line data={props.data} options={props.options} />\r\n//     </div>\r\n// );\r\n\r\n\r\n// render(<App />, document.getElementById('root'));\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Container } from \"react-bootstrap\"\r\nimport LineChart from \"./LineChart\"\r\nimport { appointmentHistory } from '../actions/appointmentActions.js'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction SelfMonitoring() {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const AppointmentHistory = useSelector((state) => state.appointmentHistory)\r\n    const { Loading, Error, userAppointments } = AppointmentHistory\r\n\r\n    var LABELS = []\r\n    var SCORES = []\r\n\r\n    console.log(LABELS)\r\n    console.log(SCORES)\r\n    const data = {\r\n        labels: LABELS,\r\n        datasets: [\r\n            {\r\n                label: 'self Monitoring',\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: SCORES,\r\n            }\r\n        ]\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(appointmentHistory(userInfo._id))\r\n\r\n    }, [userInfo, dispatch, userLogin])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container >\r\n            {   (typeof (userAppointments) !== undefined)\r\n                ?\r\n                userAppointments.map((object) => {\r\n                    let date = new Date(object.date)\r\n                    let actualdate = new Date(date.getTime() - 1000 * 60 * 60 * 5.5)\r\n                    let formatedDate = actualdate.getDate() + \"/\" + (actualdate.getMonth() + 1) + \"/\" + actualdate.getFullYear()\r\n                    LABELS.push(formatedDate)\r\n                    SCORES.push(object.accessmentScore)\r\n\r\n                })\r\n                : null\r\n            }\r\n            <div className=\"col-lg-10 text-center m-auto\">\r\n\r\n                <LineChart data={data} />\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SelfMonitoring\r\n","import React from 'react'\r\n\r\nfunction MeditationGuide() {\r\n    return (\r\n        <div>\r\n            <h2>Meditation Guide</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MeditationGuide\r\n","import React from 'react'\r\n\r\nfunction MusicTherapy() {\r\n    return (\r\n        <div>\r\n            <h2>Music Therapy</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicTherapy\r\n","import React from 'react'\r\nimport { Tabs, Tab } from \"react-bootstrap\"\r\nimport MeditationGuide from \"./MeditationGuide\"\r\nimport MusicTherapy from \"./MusicTherapy\"\r\n\r\nfunction Therapy() {\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"meditation\">\r\n                <Tab eventKey=\"meditation\" title=\"Meditation Guide\">\r\n                    <MeditationGuide />\r\n                </Tab>\r\n                <Tab eventKey=\"music\" title=\"Music Therapy\">\r\n                    <MusicTherapy />\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Therapy\r\n","import React from 'react';\r\nimport { Tab, Row, Col, Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Profile from './Profile';\r\nimport Appointment from './Appointment';\r\nimport SelfMonitoring from './SelfMonitoring';\r\nimport Therapy from './Therapy';\r\n\r\nfunction Dummy() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { userInfo } = userLogin;\r\n\tconst id = userInfo._id;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tab.Container defaultActiveKey=\"first\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col sm={2}>\r\n\t\t\t\t\t\t<Nav variant=\"pills\" className=\"flex-column \">\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<LinkContainer to={`/dashboard/profile/${id}`}>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"first\">Profile</Nav.Link>\r\n\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<LinkContainer to=\"/dashboard/appointment\">\r\n\t\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"second\">Appointments</Nav.Link>\r\n\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<LinkContainer to=\"/dashboard/selfmonitoring\">\r\n\t\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"third\">Self Monitoring</Nav.Link>\r\n\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<LinkContainer to=\"/dashboard/selfhelp\">\r\n\t\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"fourth\">Self Help</Nav.Link>\r\n\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={10}>\r\n\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t<Tab.Pane eventKey=\"first\">\r\n\t\t\t\t\t\t\t\t<Route path=\"/dashboard/profile/:id\" component={Profile} />\r\n\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t<Tab.Pane eventKey=\"second\">\r\n\t\t\t\t\t\t\t\t<Route path=\"/dashboard/appointment\" component={Appointment} />\r\n\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t<Tab.Pane eventKey=\"third\">\r\n\t\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\t\tpath=\"/dashboard/selfmonitoring\"\r\n\t\t\t\t\t\t\t\t\tcomponent={SelfMonitoring}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t<Tab.Pane eventKey=\"fourth\">\r\n\t\t\t\t\t\t\t\t<Route path=\"/dashboard/selfhelp\" component={Therapy} />\r\n\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Tab.Container>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Dummy;\r\n","import React from 'react';\r\nimport { Container, Accordion, Card } from 'react-bootstrap';\r\n\r\n/*const Faq = () => {\r\n\treturn (\r\n\t\t<div id=\"faq\">\r\n\t\t\t<Container className=\"faq-heading\" fluid>\r\n\t\t\t\tFrequently Asked Questions\r\n\t\t\t</Container>\r\n\t\t\t{/*<h1>\r\n\t\t\t\t<b style={{ color: '#0acc94' }}>Frequently Asked Questions </b>\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName=\"far fa-question-circle fa-lg\"\r\n\t\t\t\t\tstyle={{ color: 'green' }}\r\n\t\t\t\t></i>\r\n\t\t\t</h1> }}\r\n\t\t\t<h3 className=\"faq-h3\">&bull; What is Mental Health?</h3>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tA mental illness refers to a health condition whcih hampers a person\r\n\t\t\t\tmental state( Emotional, psychological, behavioural). Just like a\r\n\t\t\t\tphysical illness, a mental illness also requires professional treatment.\r\n\t\t\t\tUnlike some physical illnesses, mental illnesses are caused by a\r\n\t\t\t\tcombination of biological changes, psychological factors, social and\r\n\t\t\t\teconomic circumstances of a person.\r\n\t\t\t</p>\r\n\t\t\t<h3 className=\"faq-h3\">&bull; How are mental illnesses treated?</h3>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tMental Illness is treated with a mix of therapy and medication depending\r\n\t\t\t\ton the intensity of the illness. Some may not even require medication,\r\n\t\t\t\tand can be addressed with psychotherapies like cognitive behavioral\r\n\t\t\t\ttherapy.\r\n\t\t\t</p>\r\n\t\t\t<h3 className=\"faq-h3\">\r\n\t\t\t\t&bull; What are some of the warning signs of mental illness?\r\n\t\t\t</h3>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tSymptoms of mental health disorders vary depending on the type and\r\n\t\t\t\tseverity of the condition. The following is a list of general symptoms\r\n\t\t\t\tthat may suggest a mental health disorder, particularly when multiple\r\n\t\t\t\tsymptoms are expressed at once.\r\n\t\t\t</p>\r\n\t\t\t<ul className=\"faq-ul \">\r\n\t\t\t\t<li>Confused thinking</li>\r\n\t\t\t\t<li>Long-lasting sadness or irritability</li>\r\n\t\t\t\t<li>Extreme highs and lows in mood</li>\r\n\t\t\t\t<li>Excessive fear, worrying, or anxiety</li>\r\n\t\t\t\t<li>Social withdrawal</li>\r\n\t\t\t\t<li>Dramatic changes in eating or sleeping habits</li>\r\n\t\t\t\t<li>Strong feelings of anger</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\tDelusions or hallucinations (seeing or hearing things that are not\r\n\t\t\t\t\treally there)\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>Increasing inability to cope with daily problems and activities</li>\r\n\t\t\t\t<li>Thoughts of suicide</li>\r\n\t\t\t\t<li>Denial of obvious problems</li>\r\n\t\t\t\t<li>Abuse of drugs and/or alcohol</li>\r\n\t\t\t</ul>\r\n\t\t\t<h3 className=\"faq-h3\">\r\n\t\t\t\t&bull; What is the difference between a psychiatrist and a psychologist?\r\n\t\t\t</h3>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tWhile both psychiatrists and psychologists are mental health\r\n\t\t\t\tprofessionals, the big difference is that psychiatrists are medical\r\n\t\t\t\tphysicians while psychologists are not. Because they are licensed\r\n\t\t\t\tphysicians, psychiatrists can prescribe drugs. Psychologists are not\r\n\t\t\t\tallowed to do that. Psychologists on the other hand, use psychotherapy\r\n\t\t\t\tas a treatment method.\r\n\t\t\t</p>\r\n\t\t\t<h3 className=\"faq-h3\">\r\n\t\t\t\t&bull; How I can cope with the stress and anxiety I’m experiencing\r\n\t\t\t\tbecause of the pandemic?\r\n\t\t\t</h3>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tNegative thoughts, such as predictions, worries, or even catastrophic\r\n\t\t\t\tthinking, are normal when we feel anxious. The key is addressing them\r\n\t\t\t\tproperly, and there are three basic strategies.\r\n\t\t\t</p>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tFirst, ask yourself if your negative thought is realistic. To bring your\r\n\t\t\t\tthinking more in line with the facts, seek out information from a\r\n\t\t\t\treliable source. Of course, if the situation is unknown, searching for\r\n\t\t\t\tanswers isn’t a good use of your energy. Sometimes, recognizing that\r\n\t\t\t\t“only time will tell” is the hardest but most effective strategy.\r\n\t\t\t</p>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tSecond, see if you can challenge your negative thought with a healthier\r\n\t\t\t\talternative. For example, instead of saying “This is awful,” try “This\r\n\t\t\t\tis a challenge, but I’ve overcome lots of challenges in my life before.”\r\n\t\t\t\tJust make sure you don’t replace negative thoughts with unrealistically\r\n\t\t\t\tpositive ones.\r\n\t\t\t</p>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tThird, try to use gentle, more compassionate language with yourself. In\r\n\t\t\t\tother words, talk to yourself like you’d talk to a friend. Be aware of\r\n\t\t\t\tyour negative thinking, but don’t beat yourself up if you don’t conquer\r\n\t\t\t\tit every time. Consider saying to yourself, “There’s that horrible\r\n\t\t\t\tthought again. Oh well, it’s reminding me to be concerned. I’m still\r\n\t\t\t\tgoing for my walk to take care of myself.” Sometimes, turning our\r\n\t\t\t\tthoughts to others is the best remedy.\r\n\t\t\t</p>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tHumans are social animals, and we all need contact and support. Send a\r\n\t\t\t\tfew “Hi, I was thinking about you” texts or emails. You might just find\r\n\t\t\t\tyourself feeling better as a result.\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Faq;\r\n*/\r\n\r\nconst Faq = () => {\r\n\treturn (\r\n\t\t<div id=\"faq\">\r\n\t\t\t<Container className=\"faq-heading\" fluid>\r\n\t\t\t\tFrequently Asked Questions\r\n\t\t\t</Container>\r\n\r\n\t\t\t<Accordion defaultActiveKey=\"0\" style={{ cursor: 'pointer' }}>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n\t\t\t\t\t\t<i class=\"fas fa-question-circle\"></i> What is Mental Health?\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\tA mental illness refers to a health condition whcih hampers a\r\n\t\t\t\t\t\t\tperson mental state( Emotional, psychological, behavioural). Just\r\n\t\t\t\t\t\t\tlike a physical illness, a mental illness also requires\r\n\t\t\t\t\t\t\tprofessional treatment. Unlike some physical illnesses, mental\r\n\t\t\t\t\t\t\tillnesses are caused by a combination of biological changes,\r\n\t\t\t\t\t\t\tpsychological factors, social and economic circumstances of a\r\n\t\t\t\t\t\t\tperson.\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n\t\t\t\t\t\t<i class=\"fas fa-question-circle\"></i> How are mental illnesses\r\n\t\t\t\t\t\ttreated?\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\tMental Illness is treated with a mix of therapy and medication\r\n\t\t\t\t\t\t\tdepending on the intensity of the illness. Some may not even\r\n\t\t\t\t\t\t\trequire medication, and can be addressed with psychotherapies like\r\n\t\t\t\t\t\t\tcognitive behavioral therapy.\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n\t\t\t\t\t\t<i class=\"fas fa-question-circle\"></i> What are some of the warning\r\n\t\t\t\t\t\tsigns of mental illness?\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t<Accordion.Collapse eventKey=\"2\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\tSymptoms of mental health disorders vary depending on the type and\r\n\t\t\t\t\t\t\tseverity of the condition. The following is a list of general\r\n\t\t\t\t\t\t\tsymptoms that may suggest a mental health disorder, particularly\r\n\t\t\t\t\t\t\twhen multiple symptoms are expressed at once.\r\n\t\t\t\t\t\t\t<ul className=\"faq-ul \">\r\n\t\t\t\t\t\t\t\t<li>Confused thinking</li>\r\n\t\t\t\t\t\t\t\t<li>Long-lasting sadness or irritability</li>\r\n\t\t\t\t\t\t\t\t<li>Extreme highs and lows in mood</li>\r\n\t\t\t\t\t\t\t\t<li>Excessive fear, worrying, or anxiety</li>\r\n\t\t\t\t\t\t\t\t<li>Social withdrawal</li>\r\n\t\t\t\t\t\t\t\t<li>Dramatic changes in eating or sleeping habits</li>\r\n\t\t\t\t\t\t\t\t<li>Strong feelings of anger</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\tDelusions or hallucinations (seeing or hearing things that are\r\n\t\t\t\t\t\t\t\t\tnot really there)\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\tIncreasing inability to cope with daily problems and\r\n\t\t\t\t\t\t\t\t\tactivities\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>Thoughts of suicide</li>\r\n\t\t\t\t\t\t\t\t<li>Denial of obvious problems</li>\r\n\t\t\t\t\t\t\t\t<li>Abuse of drugs and/or alcohol</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"3\">\r\n\t\t\t\t\t\t<i class=\"fas fa-question-circle\"></i> What is the difference\r\n\t\t\t\t\t\tbetween a psychiatrist and a psychologist?\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t<Accordion.Collapse eventKey=\"3\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\tWhile both psychiatrists and psychologists are mental health\r\n\t\t\t\t\t\t\tprofessionals, the big difference is that psychiatrists are\r\n\t\t\t\t\t\t\tmedical physicians while psychologists are not. Because they are\r\n\t\t\t\t\t\t\tlicensed physicians, psychiatrists can prescribe drugs.\r\n\t\t\t\t\t\t\tPsychologists are not allowed to do that. Psychologists on the\r\n\t\t\t\t\t\t\tother hand, use psychotherapy as a treatment method.\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"4\">\r\n\t\t\t\t\t\t<i class=\"fas fa-question-circle\"></i> How I can cope with the\r\n\t\t\t\t\t\tstress and anxiety I’m experiencing because of the pandemic?\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t<Accordion.Collapse eventKey=\"4\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\tNegative thoughts, such as predictions, worries, or even\r\n\t\t\t\t\t\t\tcatastrophic thinking, are normal when we feel anxious. The key is\r\n\t\t\t\t\t\t\taddressing them properly, and there are three basic strategies.\r\n\t\t\t\t\t\t\t<p className=\"faq-p\">\r\n\t\t\t\t\t\t\t\tNegative thoughts, such as predictions, worries, or even\r\n\t\t\t\t\t\t\t\tcatastrophic thinking, are normal when we feel anxious. The key\r\n\t\t\t\t\t\t\t\tis addressing them properly, and there are three basic\r\n\t\t\t\t\t\t\t\tstrategies.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"faq-p\">\r\n\t\t\t\t\t\t\t\tFirst, ask yourself if your negative thought is realistic. To\r\n\t\t\t\t\t\t\t\tbring your thinking more in line with the facts, seek out\r\n\t\t\t\t\t\t\t\tinformation from a reliable source. Of course, if the situation\r\n\t\t\t\t\t\t\t\tis unknown, searching for answers isn’t a good use of your\r\n\t\t\t\t\t\t\t\tenergy. Sometimes, recognizing that “only time will tell” is the\r\n\t\t\t\t\t\t\t\thardest but most effective strategy.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"faq-p\">\r\n\t\t\t\t\t\t\t\tSecond, see if you can challenge your negative thought with a\r\n\t\t\t\t\t\t\t\thealthier alternative. For example, instead of saying “This is\r\n\t\t\t\t\t\t\t\tawful,” try “This is a challenge, but I’ve overcome lots of\r\n\t\t\t\t\t\t\t\tchallenges in my life before.” Just make sure you don’t replace\r\n\t\t\t\t\t\t\t\tnegative thoughts with unrealistically positive ones.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"faq-p\">\r\n\t\t\t\t\t\t\t\tThird, try to use gentle, more compassionate language with\r\n\t\t\t\t\t\t\t\tyourself. In other words, talk to yourself like you’d talk to a\r\n\t\t\t\t\t\t\t\tfriend. Be aware of your negative thinking, but don’t beat\r\n\t\t\t\t\t\t\t\tyourself up if you don’t conquer it every time. Consider saying\r\n\t\t\t\t\t\t\t\tto yourself, “There’s that horrible thought again. Oh well, it’s\r\n\t\t\t\t\t\t\t\treminding me to be concerned. I’m still going for my walk to\r\n\t\t\t\t\t\t\t\ttake care of myself.” Sometimes, turning our thoughts to others\r\n\t\t\t\t\t\t\t\tis the best remedy.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"faq-p\">\r\n\t\t\t\t\t\t\t\tHumans are social animals, and we all need contact and support.\r\n\t\t\t\t\t\t\t\tSend a few “Hi, I was thinking about you” texts or emails. You\r\n\t\t\t\t\t\t\t\tmight just find yourself feeling better as a result.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t</Card>\r\n\t\t\t</Accordion>\r\n\t\t\t{/*}\t<h3 className=\"faq-h3\">&bull; What is Mental Health?</h3>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tA mental illness refers to a health condition whcih hampers a person\r\n\t\t\t\tmental state( Emotional, psychological, behavioural). Just like a\r\n\t\t\t\tphysical illness, a mental illness also requires professional treatment.\r\n\t\t\t\tUnlike some physical illnesses, mental illnesses are caused by a\r\n\t\t\t\tcombination of biological changes, psychological factors, social and\r\n\t\t\t\teconomic circumstances of a person.\r\n\t\t\t</p>\r\n\t\t\t<h3 className=\"faq-h3\">&bull; How are mental illnesses treated?</h3>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tMental Illness is treated with a mix of therapy and medication depending\r\n\t\t\t\ton the intensity of the illness. Some may not even require medication,\r\n\t\t\t\tand can be addressed with psychotherapies like cognitive behavioral\r\n\t\t\t\ttherapy.\r\n\t\t\t</p>\r\n\t\t\t<h3 className=\"faq-h3\">\r\n\t\t\t\t&bull; What are some of the warning signs of mental illness?\r\n\t\t\t</h3>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tSymptoms of mental health disorders vary depending on the type and\r\n\t\t\t\tseverity of the condition. The following is a list of general symptoms\r\n\t\t\t\tthat may suggest a mental health disorder, particularly when multiple\r\n\t\t\t\tsymptoms are expressed at once.\r\n\t\t\t</p>\r\n\t\t\t<ul className=\"faq-ul \">\r\n\t\t\t\t<li>Confused thinking</li>\r\n\t\t\t\t<li>Long-lasting sadness or irritability</li>\r\n\t\t\t\t<li>Extreme highs and lows in mood</li>\r\n\t\t\t\t<li>Excessive fear, worrying, or anxiety</li>\r\n\t\t\t\t<li>Social withdrawal</li>\r\n\t\t\t\t<li>Dramatic changes in eating or sleeping habits</li>\r\n\t\t\t\t<li>Strong feelings of anger</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\tDelusions or hallucinations (seeing or hearing things that are not\r\n\t\t\t\t\treally there)\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>Increasing inability to cope with daily problems and activities</li>\r\n\t\t\t\t<li>Thoughts of suicide</li>\r\n\t\t\t\t<li>Denial of obvious problems</li>\r\n\t\t\t\t<li>Abuse of drugs and/or alcohol</li>\r\n\t\t\t\t\t</ul> \r\n\t\t\t<h3 className=\"faq-h3\">\r\n\t\t\t\t&bull; What is the difference between a psychiatrist and a psychologist?\r\n\t\t\t</h3>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tWhile both psychiatrists and psychologists are mental health\r\n\t\t\t\tprofessionals, the big difference is that psychiatrists are medical\r\n\t\t\t\tphysicians while psychologists are not. Because they are licensed\r\n\t\t\t\tphysicians, psychiatrists can prescribe drugs. Psychologists are not\r\n\t\t\t\tallowed to do that. Psychologists on the other hand, use psychotherapy\r\n\t\t\t\tas a treatment method.\r\n\t\t\t</p>\r\n\t\t\t\r\n\t\t\t<h3 className=\"faq-h3\">\r\n\t\t\t\t&bull; How I can cope with the stress and anxiety I’m experiencing\r\n\t\t\t\tbecause of the pandemic?\r\n\t\t\t</h3>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tNegative thoughts, such as predictions, worries, or even catastrophic\r\n\t\t\t\tthinking, are normal when we feel anxious. The key is addressing them\r\n\t\t\t\tproperly, and there are three basic strategies.\r\n\t\t\t</p>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tFirst, ask yourself if your negative thought is realistic. To bring your\r\n\t\t\t\tthinking more in line with the facts, seek out information from a\r\n\t\t\t\treliable source. Of course, if the situation is unknown, searching for\r\n\t\t\t\tanswers isn’t a good use of your energy. Sometimes, recognizing that\r\n\t\t\t\t“only time will tell” is the hardest but most effective strategy.\r\n\t\t\t</p>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tSecond, see if you can challenge your negative thought with a healthier\r\n\t\t\t\talternative. For example, instead of saying “This is awful,” try “This\r\n\t\t\t\tis a challenge, but I’ve overcome lots of challenges in my life before.”\r\n\t\t\t\tJust make sure you don’t replace negative thoughts with unrealistically\r\n\t\t\t\tpositive ones.\r\n\t\t\t</p>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tThird, try to use gentle, more compassionate language with yourself. In\r\n\t\t\t\tother words, talk to yourself like you’d talk to a friend. Be aware of\r\n\t\t\t\tyour negative thinking, but don’t beat yourself up if you don’t conquer\r\n\t\t\t\tit every time. Consider saying to yourself, “There’s that horrible\r\n\t\t\t\tthought again. Oh well, it’s reminding me to be concerned. I’m still\r\n\t\t\t\tgoing for my walk to take care of myself.” Sometimes, turning our\r\n\t\t\t\tthoughts to others is the best remedy.\r\n\t\t\t</p>\r\n\t\t\t<p className=\"faq-p\">\r\n\t\t\t\tHumans are social animals, and we all need contact and support. Send a\r\n\t\t\t\tfew “Hi, I was thinking about you” texts or emails. You might just find\r\n\t\t\t\tyourself feeling better as a result.\r\n\t\t\t</p>*/}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Faq;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n\tconst currentYear = new Date().getFullYear();\r\n\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<Container id=\"aboutus\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col className=\"text-center py-2\">\r\n\t\t\t\t\t\t<p>&copy; {currentYear} Sahaya </p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</footer>\r\n\t);\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Row, Col, Container, Image, Carousel } from 'react-bootstrap';\r\n//import {BrowserRouter as Route} from 'react-router-dom'\r\nimport Faq from './Faq';\r\nimport Footer from './partials/Footer';\r\n\r\nconst HomeScreen = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Carousel interval={5000}>\r\n\t\t\t\t<Carousel.Item>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"d-block w-100\"\r\n\t\t\t\t\t\tsrc=\"https://images.pexels.com/photos/3978594/pexels-photo-3978594.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n\t\t\t\t\t\talt=\"First slide\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Carousel.Caption>\r\n\t\t\t\t\t\t<h3 style={{ fontFamily: 'Titillium Web, sans-serif' }}>\r\n\t\t\t\t\t\t\tThe only journey is the journey within.” – Rainer Maria Rilke\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</Carousel.Caption>\r\n\t\t\t\t</Carousel.Item>\r\n\r\n\t\t\t\t<Carousel.Item>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"d-block w-100\"\r\n\t\t\t\t\t\tsrc=\"https://cdn.pixabay.com/photo/2018/06/05/08/14/sunset-3454964_1280.jpg\"\r\n\t\t\t\t\t\talt=\"Second slide\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Carousel.Item>\r\n\t\t\t\t<Carousel.Item>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"d-block w-100\"\r\n\t\t\t\t\t\tsrc=\"https://cdn.pixabay.com/photo/2019/05/27/07/26/mental-health-4232031_1280.jpg\"\r\n\t\t\t\t\t\talt=\"Third slide\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Carousel.Caption>\r\n\t\t\t\t\t\t<h3\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontFamily: 'Titillium Web, sans-serif',\r\n\t\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tMental health…is not a destination, but a process. It’s about how\r\n\t\t\t\t\t\t\tyou drive, not where you’re going.” – Noam Shpancer, PhD\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</Carousel.Caption>\r\n\t\t\t\t</Carousel.Item>\r\n\t\t\t</Carousel>\r\n\t\t\t<Container className=\"section1\" fluid>\r\n\t\t\t\t{/*<Row className=\"mt-1\">\r\n\t\t\t\t<Col className=\"c1\">Do Not Ignore Mental Health!</Col>\r\n\t\t\t\t<Col className=\"c2\">\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tstyle={{ height: '36rem', width: '50rem' }}\r\n\t\t\t\t\t\tsrc=\"https://cdn.pixabay.com/photo/2015/11/07/09/11/board-1030589_1280.jpg\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t</Row> */}\r\n\t\t\t\t{/*<Container className=\"faq-heading\" fluid>\r\n\t\t\t\t<b>Frequently Asked Questions</b>\r\n\t</Container> */}\r\n\t\t\t\t<Faq />\r\n\t\t\t\t<Footer />\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React from 'react'\r\nimport { Tab, Row, Col, Nav } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Route } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport Profile from \"./Profile\"\r\nimport Appointment from \"./Appointment\"\r\nimport SelfMonitoring from \"./SelfMonitoring\"\r\nimport Therapy from \"./Therapy\"\r\n\r\nfunction AdminDashboard() {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const id = userInfo._id\r\n    return (\r\n        <>\r\n            <Tab.Container defaultActiveKey=\"first\">\r\n                <Row>\r\n                    <Col sm={2} >\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <LinkContainer to={`/admindashboard/profile/${id}`}>\r\n                                    <Nav.Link eventKey=\"first\">Profile</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <LinkContainer to=\"/admindashboard/appointment\">\r\n                                    <Nav.Link eventKey=\"second\">Appointments</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            {/* <Nav.Item>\r\n                                <LinkContainer to=\"/dashboard/selfmonitoring\">\r\n                                    <Nav.Link eventKey=\"third\">Self Monitoring</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <LinkContainer to=\"/dashboard/selfhelp\">\r\n                                    <Nav.Link eventKey=\"fourth\">Self Help</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item> */}\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"first\">\r\n                                <Route path=\"/admindashboard/profile/:id\" component={Profile} />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"second\">\r\n                                <Route path=\"/admindashboard/appointment\" ><Appointment /></Route>\r\n                            </Tab.Pane>\r\n                            {/* <Tab.Pane eventKey=\"third\">\r\n                                <Route path=\"/dashboard/selfmonitoring\" component={SelfMonitoring} />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"fourth\">\r\n                                <Route path=\"/dashboard/selfhelp\" component={Therapy} />\r\n                            </Tab.Pane> */}\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n","\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Container, Button } from \"react-bootstrap\"\r\nimport LineChart from \"./LineChart\"\r\nimport { appointmentHistory } from '../actions/appointmentActions.js'\r\nimport { ID, OBJECT } from \"./WeeklyRecords\"\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\n\r\n\r\n\r\nfunction Analysis({ location, history }) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const AppointmentHistory = useSelector((state) => state.appointmentHistory)\r\n    const { Loading, Error, userAppointments } = AppointmentHistory\r\n\r\n    var LABELS = []\r\n    var SCORES = []\r\n\r\n    console.log(LABELS)\r\n    console.log(SCORES)\r\n    const data = {\r\n        labels: LABELS,\r\n        datasets: [\r\n            {\r\n                label: 'self Monitoring',\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: SCORES,\r\n            }\r\n        ]\r\n    }\r\n    console.log(OBJECT)\r\n    console.log(ID)\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(appointmentHistory(ID))\r\n\r\n    }, [userInfo, dispatch, userLogin, ID])\r\n\r\n    function pushback() {\r\n        history.push(`/admindashboard/profile/${userInfo._id}`)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container >\r\n            <Button onClick={pushback}>BACK</Button>\r\n            {   (typeof (userAppointments) !== undefined)\r\n                ? <>\r\n                    {\r\n                        userAppointments.map((object) => {\r\n                            let date = new Date(object.date)\r\n                            let actualdate = new Date(date.getTime() - 1000 * 60 * 60 * 5.5)\r\n                            let formatedDate = actualdate.getDate() + \"/\" + (actualdate.getMonth() + 1) + \"/\" + actualdate.getFullYear()\r\n                            LABELS.push(formatedDate)\r\n                            SCORES.push(object.accessmentScore)\r\n\r\n                        })\r\n                    }\r\n                </>\r\n                : null\r\n            }\r\n            <div className=\"col-lg-10 text-center m-auto\">\r\n\r\n                <LineChart data={data} />\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Analysis\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './partials/Header';\n//import Footer from './partials/Footer';\nimport Signup from './Signup';\nimport Register from './Register';\nimport Questionnair from './Questionnair';\nimport Scores from './Scores';\nimport Profile from './Profile';\n//import Faq from './Faq';\nimport Dummy from './Dummy';\nimport HomeScreen from './HomeScreen';\nimport AdminDashboard from './AdminDashboard';\nimport Analysis from './Analysis';\nimport Appointment from './Appointment';\nimport '../custom.css';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Header />\n\t\t\t<main>\n\t\t\t\t<Container className=\"below-navbar\" fluid>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{/* <Route path='/' exact component={HomeScreen} /> */}\n\t\t\t\t\t\t<Route path=\"/\" exact component={HomeScreen} />\n\t\t\t\t\t\t<Route path=\"/login\" component={Signup} />\n\t\t\t\t\t\t<Route path=\"/register\" component={Register} />\n\t\t\t\t\t\t<Route path=\"/questionair\" component={Questionnair} />\n\t\t\t\t\t\t<Route path=\"/score\" component={Scores} />\n\t\t\t\t\t\t<Route path=\"/dashboard\" component={Dummy} />\n\t\t\t\t\t\t<Route path=\"/admindashboard\" component={AdminDashboard} />\n\t\t\t\t\t\t<Route path=\"/analysis\" component={Analysis} />\n\t\t\t\t\t\t{/* <Route path=\"/admindashboard/appointment\" component={Appointment} /> */}\n\n\t\t\t\t\t\t{/* <Route path=\"/dashboard/profile/:id\" component={Profile} /> */}\n\t\t\t\t\t\t<Route path=\"/profile/:id\" component={Profile} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t\t{/*<Faq />\n      <Footer /> */}\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/App';\nimport './styles.css';\nimport './bootstrap.min.css';\nimport './custom.css';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}